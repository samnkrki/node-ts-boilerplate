name: CI
on: 
    push:
        branches: [staging, deployment-setup]
    workflow_dispatch:
        inputs:
            version:
                description: 'Image version'
                required: true

# concurrency: 
#   group: ${{ github.head_ref }}
#   cancel-in-progress: true

env:
    REGISTRY: ${{ secrets.REGISTRY }}
    IMAGE_NAME: ${{ secrets.IMAGE_NAME }}

jobs:
    build_and_push:
        name: Push Docker images to Digital Ocean Container Registry
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the repository
              uses: actions/checkout@v2
              
            - name: Build Container Image
              run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) --target staging .
              

            - name: Install doctl
              uses: digitalocean/action-doctl@v2
              with:
                  token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
                  version: '1.60.0'

            - name: Login to DigitalOcean Container Registry
              run: doctl registry login --expiry-seconds 1200

            - name: Remove all old images
              run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi
             
            # - name: Remove all unused image manifests
            #   run: | 
            #     yes | head -n 10 | doctl registry garbage-collection start --include-untagged-manifests $REGISTRY

            - name: Push image to DigitalOcean Container Registry
              run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
            
    deploy:
        name: Deploy to Digital Ocean Droplets
        runs-on: ubuntu-latest
        needs: build_and_push

        steps: 
            - name: Deploy to Digital Ocean Droplets via ssh action
              uses: appleboy/ssh-action@master
              with:
                    host: ${{ secrets.SSH_HOST }}
                    username: ${{ secrets.SSH_USERNAME }}
                    key: ${{ secrets.SSH_KEY }}
                    envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
                    script: |
                        #check out the current path
                        echo $(pwd)
                        echo "Deploying to Digital Ocean Droplet"
                        # Login to registry
                        docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
                        # Stop running container
                        docker stop $(echo $IMAGE_NAME)
                        # Remove old container
                        docker rm $(echo $IMAGE_NAME)
                        # Run a new container from a new image
                        docker run -d \
                        -p 3000:3000 \
                        --restart unless-stopped \
                        --volume /root/keys:/usr/src/app/certs \
                        --env-file /root/.env \
                        --name $(echo $IMAGE_NAME) \
                        $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)